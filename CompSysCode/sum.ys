# Jonathan Wilson jmw323 
	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

# Array of elements
	.align 8 	
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0


main:
	pushq %rdi
	irmovq ele1, %rdi
	call sum_list
	popq %rdi
	ret

sum_list:
	pushq %rbx
	xorq %rax, %rax		#Long val = 0;	
	andq %rdi, %rdi		#Set CC
	jmp	test

loop:
	mrmovq (%rdi), %rbx	#get ls->val
	addq %rbx, %rax		#val += ls->val
	mrmovq 8(%rdi), %rdi	#ls = ls->next	
	andq %rdi, %rdi		#Check if ls->next == 0
	 
test:
	jne loop		#Check if ls->next | ls->val == 0
	popq %rbx
	ret

	.pos 0x200		
stack:	 
